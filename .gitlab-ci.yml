image: registry.gitlab.com/mayachain/mayanode:builder-v5@sha256:b3a025996892ec307a62a0e0da054856fa81aa4747e78a3a7e58253bc4228b7a

workflow:
  rules: &rules
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "api"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "webide"

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  SAST_EXCLUDED_ANALYZERS: "eslint,bandit,semgrep"
  SAST_EXCLUDED_PATHS: "spec, test, tests, tmp,.cache"

stages:
  - generate
  - test
  - build
  - long-test

generate:
  rules: &rules
    - if: $CI == "true"
      when: on_success
  stage: generate
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  before_script:
    - apk -U add bash curl findutils git go jq make protoc sed wget
  script:
    - |
      export PATH="$PATH:/root/go/bin"
      make generate
      ./scripts/lint-generated.bash

unit-tests:
  stage: test
  except:
    - schedules
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'
  before_script:
    - make protob
  script:
    - make test-coverage
    - make coverage-report
    - go tool cover -func=coverage.txt
    - go tool cover -html=coverage.txt -o coverage.html
      #  artifacts:
      #    when: always
      #    reports:
      #      # junit: report.xml
      #      coverage_report:
      #        coverage_format: cobertura
      #        path: coverage.xml
      #    paths:
      #      - coverage*

lint:
  tags:
    - mayachain
  variables:
    CI_DEBUG_TRACE: "true"
  rules:
    - if: $CI_COMMIT_BRANCH == "stagenet"
      when: never
    - if: $CI_COMMIT_BRANCH == "mainnet"
      when: never
    - if: $CI == "true"
      when: on_success
  stage: test
  before_script:
    - git fetch origin develop
  script:
    - make lint-ci

build-mayanode:
  stage: build
  image: docker:20.10.12
  only:
    - master # build mocknet image
    - develop # build mocknet image multichain
    - mainnet
    - stagenet
  services:
    - docker:20.10.12-dind
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384#note_497228752
    - |
      for i in $(seq 1 30)
      do
          docker info && break
          echo "Waiting for docker to start"
          sleep 1s
      done
    - apk -U add make git jq curl protoc
    - make docker-gitlab-login
  script:
    - make docker-gitlab-build
    - make docker-gitlab-push

build-smoke:
  stage: build
  image: docker:20.10.12
  only:
    - develop
  services:
    - docker:20.10.12-dind
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384#note_497228752
    - |
      for i in $(seq 1 30)
      do
          docker info && break
          echo "Waiting for docker to start"
          sleep 1s
      done
    - apk -U add make git jq curl protoc
    - apk add docker docker-cli-compose
    - apk add docker docker-cli-buildx
    - make docker-gitlab-login
  script:
    - make smoke-build-image
    - make smoke-push-image

smoke-test:
  stage: long-test
  cache: {}
  image: docker:20.10.12
  services:
    - name: docker:20.10.12-dind
      alias: docker
  artifacts:
    when: on_failure
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./logs/
  except:
    - schedules
  environment:
    name: integration
  variables:
    MIDGARD_REPO: https://gitlab.com/mayachain/midgard.git
    MIDGARD_IMAGE: registry.gitlab.com/mayachain/midgard:develop
    THOR_BLOCK_TIME: 0.8s
    BLOCK_TIME: 0.8s
    TERRA_BLOCK_TIME: 0.8s
    GAIA_BLOCK_TIME: 0.8s
    BLOCK_SCANNER_BACKOFF: 0.8s
    ETH_BLOCK_TIME: "1"
    DASH_BLOCK_TIME: 1
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384#note_520701742
    - until docker info; do sleep 1; done
    - apk -U add git make protoc
    - (git clone --single-branch -b $CI_COMMIT_REF_NAME $MIDGARD_REPO && cd ./midgard && IMAGE_NAME=$MIDGARD_IMAGE make build && cd ..) || (git clone --single-branch -b develop $MIDGARD_REPO && docker pull $MIDGARD_IMAGE)
    - apk add docker docker-cli-compose
    - apk add docker docker-cli-buildx
  script:
    - make smoke
  after_script:
    - ./scripts/docker_logs.sh

test-regression:
  rules: *rules
  stage: long-test
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  environment:
    name: integration
  variables:
    DOCKER_BUILDKIT: "1"
    TIME_FACTOR: "2"
    PARALLELISM: "4"
    FAIL_FAST: "true"
  before_script:
    - apk -U add make git bash
  script:
    - make test-regression

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

# NOTE: The following included jobs have internal rule definitions that need to be
# overwritten for them to trigger on merge requests. We overwrite all with the default
# workflow rule set.

secret_detection:
  stage: test
  rules: *rules

semgrep:
  stage: test
  rules: *rules
  image: returntocorp/semgrep-agent:v1
  script: semgrep-agent --gitlab-json > gl-sast-report.json || true
  variables:
    SEMGREP_RULES: >-
      https://semgrep.dev/s/heimdallthor:insecure-logging
  artifacts:
    reports:
      sast: gl-sast-report.json
