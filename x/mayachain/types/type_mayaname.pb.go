// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mayachain/v1/x/mayachain/types/type_mayaname.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	common "gitlab.com/mayachain/mayanode/common"
	gitlab_com_mayachain_mayanode_common "gitlab.com/mayachain/mayanode/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MAYANameAlias struct {
	Chain   gitlab_com_mayachain_mayanode_common.Chain   `protobuf:"bytes,1,opt,name=chain,proto3,casttype=gitlab.com/mayachain/mayanode/common.Chain" json:"chain,omitempty"`
	Address gitlab_com_mayachain_mayanode_common.Address `protobuf:"bytes,2,opt,name=address,proto3,casttype=gitlab.com/mayachain/mayanode/common.Address" json:"address,omitempty"`
}

func (m *MAYANameAlias) Reset()         { *m = MAYANameAlias{} }
func (m *MAYANameAlias) String() string { return proto.CompactTextString(m) }
func (*MAYANameAlias) ProtoMessage()    {}
func (*MAYANameAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bf0ab87482b98a0, []int{0}
}
func (m *MAYANameAlias) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MAYANameAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MAYANameAlias.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MAYANameAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MAYANameAlias.Merge(m, src)
}
func (m *MAYANameAlias) XXX_Size() int {
	return m.Size()
}
func (m *MAYANameAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_MAYANameAlias.DiscardUnknown(m)
}

var xxx_messageInfo_MAYANameAlias proto.InternalMessageInfo

func (m *MAYANameAlias) GetChain() gitlab_com_mayachain_mayanode_common.Chain {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *MAYANameAlias) GetAddress() gitlab_com_mayachain_mayanode_common.Address {
	if m != nil {
		return m.Address
	}
	return ""
}

type MAYAName struct {
	Name              string                                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExpireBlockHeight int64                                         `protobuf:"varint,2,opt,name=expire_block_height,json=expireBlockHeight,proto3" json:"expire_block_height,omitempty"`
	Owner             github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,3,opt,name=owner,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"owner,omitempty"`
	PreferredAsset    common.Asset                                  `protobuf:"bytes,4,opt,name=preferred_asset,json=preferredAsset,proto3" json:"preferred_asset"`
	Aliases           []MAYANameAlias                               `protobuf:"bytes,5,rep,name=aliases,proto3" json:"aliases"`
	AffiliateSplit    int64                                         `protobuf:"varint,6,opt,name=affiliate_split,json=affiliateSplit,proto3" json:"affiliate_split,omitempty"`
	SubAffiliateSplit int64                                         `protobuf:"varint,7,opt,name=sub_affiliate_split,json=subAffiliateSplit,proto3" json:"sub_affiliate_split,omitempty"`
}

func (m *MAYAName) Reset()         { *m = MAYAName{} }
func (m *MAYAName) String() string { return proto.CompactTextString(m) }
func (*MAYAName) ProtoMessage()    {}
func (*MAYAName) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bf0ab87482b98a0, []int{1}
}
func (m *MAYAName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MAYAName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MAYAName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MAYAName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MAYAName.Merge(m, src)
}
func (m *MAYAName) XXX_Size() int {
	return m.Size()
}
func (m *MAYAName) XXX_DiscardUnknown() {
	xxx_messageInfo_MAYAName.DiscardUnknown(m)
}

var xxx_messageInfo_MAYAName proto.InternalMessageInfo

func (m *MAYAName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MAYAName) GetExpireBlockHeight() int64 {
	if m != nil {
		return m.ExpireBlockHeight
	}
	return 0
}

func (m *MAYAName) GetOwner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MAYAName) GetPreferredAsset() common.Asset {
	if m != nil {
		return m.PreferredAsset
	}
	return common.Asset{}
}

func (m *MAYAName) GetAliases() []MAYANameAlias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *MAYAName) GetAffiliateSplit() int64 {
	if m != nil {
		return m.AffiliateSplit
	}
	return 0
}

func (m *MAYAName) GetSubAffiliateSplit() int64 {
	if m != nil {
		return m.SubAffiliateSplit
	}
	return 0
}

func init() {
	proto.RegisterType((*MAYANameAlias)(nil), "types.MAYANameAlias")
	proto.RegisterType((*MAYAName)(nil), "types.MAYAName")
}

func init() {
	proto.RegisterFile("mayachain/v1/x/mayachain/types/type_mayaname.proto", fileDescriptor_1bf0ab87482b98a0)
}

var fileDescriptor_1bf0ab87482b98a0 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x6e, 0xd4, 0x30,
	0x10, 0x8e, 0xbb, 0x9b, 0x2e, 0xb8, 0xb4, 0x15, 0xa6, 0x87, 0xa8, 0x87, 0x24, 0xea, 0x85, 0x08,
	0xd1, 0x84, 0x2e, 0x1c, 0xb9, 0x24, 0x20, 0xf1, 0x23, 0xc1, 0x21, 0x9c, 0xe0, 0x12, 0x39, 0x89,
	0x37, 0xb1, 0x9a, 0xc4, 0x51, 0xec, 0x85, 0xf6, 0x2d, 0x78, 0x05, 0xde, 0xa6, 0xc7, 0x3d, 0x72,
	0x8a, 0xd0, 0x2e, 0x4f, 0xb1, 0x27, 0x64, 0x7b, 0xb3, 0xb0, 0x20, 0xa1, 0x5e, 0xe2, 0xc9, 0x37,
	0xdf, 0x37, 0xf3, 0xcd, 0xd8, 0x70, 0x5a, 0xe3, 0x6b, 0x9c, 0x95, 0x98, 0x36, 0xc1, 0xe7, 0x8b,
	0xe0, 0x2a, 0xf8, 0xfd, 0x2b, 0xae, 0x5b, 0xc2, 0xd5, 0x37, 0x91, 0x60, 0x83, 0x6b, 0xe2, 0xb7,
	0x1d, 0x13, 0x0c, 0x99, 0x2a, 0x75, 0xea, 0xee, 0x48, 0x33, 0x56, 0xd7, 0xac, 0xd9, 0x1c, 0x9a,
	0x78, 0x7a, 0x52, 0xb0, 0x82, 0xa9, 0x30, 0x90, 0x91, 0x46, 0xcf, 0xbe, 0x01, 0x78, 0xf8, 0x2e,
	0xfc, 0x18, 0xbe, 0xc7, 0x35, 0x09, 0x2b, 0x8a, 0x39, 0x7a, 0x09, 0x4d, 0x55, 0xc7, 0x02, 0x2e,
	0xf0, 0xee, 0x46, 0xfe, 0xba, 0x77, 0x1e, 0x15, 0x54, 0x54, 0x38, 0xf5, 0x33, 0x56, 0xff, 0xe1,
	0x49, 0x19, 0x61, 0x39, 0x19, 0xda, 0xbc, 0x90, 0x68, 0xac, 0xc5, 0xe8, 0x2d, 0x9c, 0xe0, 0x3c,
	0xef, 0x08, 0xe7, 0xd6, 0x9e, 0xaa, 0xf3, 0x64, 0xdd, 0x3b, 0x8f, 0x6f, 0x55, 0x27, 0xd4, 0xba,
	0x78, 0x28, 0x70, 0xf6, 0x73, 0x0f, 0xde, 0x19, 0x3c, 0x22, 0x04, 0xc7, 0x72, 0x7a, 0xed, 0x2e,
	0x56, 0x31, 0xf2, 0xe1, 0x03, 0x72, 0xd5, 0xd2, 0x8e, 0x24, 0x69, 0xc5, 0xb2, 0xcb, 0xa4, 0x24,
	0xb4, 0x28, 0x85, 0x6a, 0x3c, 0x8a, 0xef, 0xeb, 0x54, 0x24, 0x33, 0xaf, 0x55, 0x02, 0xbd, 0x82,
	0x26, 0xfb, 0xd2, 0x90, 0xce, 0x1a, 0xb9, 0xc0, 0xbb, 0x17, 0x5d, 0xac, 0x7b, 0xe7, 0xbc, 0xa0,
	0xa2, 0x9c, 0x6b, 0x6b, 0x19, 0xe3, 0x35, 0xe3, 0x9b, 0xe3, 0x9c, 0xe7, 0x97, 0x7a, 0xfd, 0x7e,
	0x98, 0x65, 0x83, 0x37, 0xad, 0x47, 0xcf, 0xe1, 0x71, 0xdb, 0x91, 0x19, 0xe9, 0x3a, 0x92, 0x27,
	0x98, 0x73, 0x22, 0xac, 0xb1, 0x0b, 0xbc, 0x83, 0xe9, 0xa1, 0x3f, 0x0c, 0x23, 0xc1, 0x68, 0x7c,
	0xd3, 0x3b, 0x46, 0x7c, 0xb4, 0xe5, 0x2a, 0x14, 0x3d, 0x83, 0x13, 0x2c, 0x57, 0x4e, 0xb8, 0x65,
	0xba, 0x23, 0xef, 0x60, 0x7a, 0xe2, 0xeb, 0x46, 0x3b, 0x17, 0xb2, 0x11, 0x0f, 0x54, 0xf4, 0x10,
	0x1e, 0xe3, 0xd9, 0x8c, 0x56, 0x14, 0x0b, 0x92, 0xf0, 0xb6, 0xa2, 0xc2, 0xda, 0x57, 0x83, 0x1e,
	0x6d, 0xe1, 0x0f, 0x12, 0x95, 0x5b, 0xe1, 0xf3, 0x34, 0xf9, 0x9b, 0x3c, 0xd1, 0x5b, 0xe1, 0xf3,
	0x34, 0xdc, 0xe1, 0x47, 0x6f, 0x6e, 0x96, 0x36, 0x58, 0x2c, 0x6d, 0xf0, 0x63, 0x69, 0x83, 0xaf,
	0x2b, 0xdb, 0x58, 0xac, 0x6c, 0xe3, 0xfb, 0xca, 0x36, 0x3e, 0x05, 0xff, 0xbf, 0xb7, 0x7f, 0x1e,
	0x6a, 0xba, 0xaf, 0x1e, 0xd7, 0xd3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfd, 0xef, 0x30, 0x5c,
	0xd1, 0x02, 0x00, 0x00,
}

func (m *MAYANameAlias) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MAYANameAlias) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MAYANameAlias) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTypeMayaname(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTypeMayaname(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MAYAName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MAYAName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MAYAName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SubAffiliateSplit != 0 {
		i = encodeVarintTypeMayaname(dAtA, i, uint64(m.SubAffiliateSplit))
		i--
		dAtA[i] = 0x38
	}
	if m.AffiliateSplit != 0 {
		i = encodeVarintTypeMayaname(dAtA, i, uint64(m.AffiliateSplit))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Aliases) > 0 {
		for iNdEx := len(m.Aliases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Aliases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypeMayaname(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	{
		size, err := m.PreferredAsset.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTypeMayaname(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTypeMayaname(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ExpireBlockHeight != 0 {
		i = encodeVarintTypeMayaname(dAtA, i, uint64(m.ExpireBlockHeight))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTypeMayaname(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypeMayaname(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypeMayaname(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MAYANameAlias) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTypeMayaname(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTypeMayaname(uint64(l))
	}
	return n
}

func (m *MAYAName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTypeMayaname(uint64(l))
	}
	if m.ExpireBlockHeight != 0 {
		n += 1 + sovTypeMayaname(uint64(m.ExpireBlockHeight))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTypeMayaname(uint64(l))
	}
	l = m.PreferredAsset.Size()
	n += 1 + l + sovTypeMayaname(uint64(l))
	if len(m.Aliases) > 0 {
		for _, e := range m.Aliases {
			l = e.Size()
			n += 1 + l + sovTypeMayaname(uint64(l))
		}
	}
	if m.AffiliateSplit != 0 {
		n += 1 + sovTypeMayaname(uint64(m.AffiliateSplit))
	}
	if m.SubAffiliateSplit != 0 {
		n += 1 + sovTypeMayaname(uint64(m.SubAffiliateSplit))
	}
	return n
}

func sovTypeMayaname(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypeMayaname(x uint64) (n int) {
	return sovTypeMayaname(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MAYANameAlias) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypeMayaname
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MAYANameAlias: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MAYANameAlias: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = gitlab_com_mayachain_mayanode_common.Chain(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = gitlab_com_mayachain_mayanode_common.Address(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypeMayaname(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MAYAName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypeMayaname
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MAYAName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MAYAName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireBlockHeight", wireType)
			}
			m.ExpireBlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpireBlockHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = append(m.Owner[:0], dAtA[iNdEx:postIndex]...)
			if m.Owner == nil {
				m.Owner = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreferredAsset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PreferredAsset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aliases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aliases = append(m.Aliases, MAYANameAlias{})
			if err := m.Aliases[len(m.Aliases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AffiliateSplit", wireType)
			}
			m.AffiliateSplit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AffiliateSplit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubAffiliateSplit", wireType)
			}
			m.SubAffiliateSplit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubAffiliateSplit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypeMayaname(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypeMayaname
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypeMayaname(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypeMayaname
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeMayaname
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypeMayaname
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypeMayaname
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypeMayaname
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypeMayaname        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypeMayaname          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypeMayaname = fmt.Errorf("proto: unexpected end of group")
)
