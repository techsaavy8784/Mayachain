/*
Mayanode API

Mayanode REST API.

Contact: devs@mayachain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MayanameAlias struct for MayanameAlias
type MayanameAlias struct {
	Chain *string `json:"chain,omitempty"`
	Address *string `json:"address,omitempty"`
}

// NewMayanameAlias instantiates a new MayanameAlias object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMayanameAlias() *MayanameAlias {
	this := MayanameAlias{}
	return &this
}

// NewMayanameAliasWithDefaults instantiates a new MayanameAlias object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMayanameAliasWithDefaults() *MayanameAlias {
	this := MayanameAlias{}
	return &this
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *MayanameAlias) GetChain() string {
	if o == nil || o.Chain == nil {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MayanameAlias) GetChainOk() (*string, bool) {
	if o == nil || o.Chain == nil {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *MayanameAlias) HasChain() bool {
	if o != nil && o.Chain != nil {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *MayanameAlias) SetChain(v string) {
	o.Chain = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MayanameAlias) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MayanameAlias) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MayanameAlias) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MayanameAlias) SetAddress(v string) {
	o.Address = &v
}

func (o MayanameAlias) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Chain != nil {
		toSerialize["chain"] = o.Chain
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableMayanameAlias struct {
	value *MayanameAlias
	isSet bool
}

func (v NullableMayanameAlias) Get() *MayanameAlias {
	return v.value
}

func (v *NullableMayanameAlias) Set(val *MayanameAlias) {
	v.value = val
	v.isSet = true
}

func (v NullableMayanameAlias) IsSet() bool {
	return v.isSet
}

func (v *NullableMayanameAlias) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMayanameAlias(val *MayanameAlias) *NullableMayanameAlias {
	return &NullableMayanameAlias{value: val, isSet: true}
}

func (v NullableMayanameAlias) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMayanameAlias) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


