/*
Mayanode API

Mayanode REST API.

Contact: devs@mayachain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pool struct for Pool
type Pool struct {
	BalanceCacao string `json:"balance_cacao"`
	BalanceAsset string `json:"balance_asset"`
	Asset string `json:"asset"`
	// the total pool liquidity provider units
	LPUnits string `json:"LP_units"`
	// the total pool units, this is the sum of LP and synth units
	PoolUnits string `json:"pool_units"`
	Status string `json:"status"`
	Decimals *int64 `json:"decimals,omitempty"`
	// the total synth units in the pool
	SynthUnits string `json:"synth_units"`
	// the total supply of synths for the asset
	SynthSupply string `json:"synth_supply"`
	PendingInboundCacao string `json:"pending_inbound_cacao"`
	PendingInboundAsset string `json:"pending_inbound_asset"`
	// the balance of L1 asset deposited into the Savers Vault
	SaversDepth interface{} `json:"savers_depth"`
	// the number of units owned by Savers
	SaversUnits string `json:"savers_units"`
	// whether additional synths cannot be minted
	SynthMintPaused bool `json:"synth_mint_paused"`
}

// NewPool instantiates a new Pool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPool(balanceCacao string, balanceAsset string, asset string, lPUnits string, poolUnits string, status string, synthUnits string, synthSupply string, pendingInboundCacao string, pendingInboundAsset string, saversDepth interface{}, saversUnits string, synthMintPaused bool) *Pool {
	this := Pool{}
	this.BalanceCacao = balanceCacao
	this.BalanceAsset = balanceAsset
	this.Asset = asset
	this.LPUnits = lPUnits
	this.PoolUnits = poolUnits
	this.Status = status
	this.SynthUnits = synthUnits
	this.SynthSupply = synthSupply
	this.PendingInboundCacao = pendingInboundCacao
	this.PendingInboundAsset = pendingInboundAsset
	this.SaversDepth = saversDepth
	this.SaversUnits = saversUnits
	this.SynthMintPaused = synthMintPaused
	return &this
}

// NewPoolWithDefaults instantiates a new Pool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolWithDefaults() *Pool {
	this := Pool{}
	return &this
}

// GetBalanceCacao returns the BalanceCacao field value
func (o *Pool) GetBalanceCacao() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceCacao
}

// GetBalanceCacaoOk returns a tuple with the BalanceCacao field value
// and a boolean to check if the value has been set.
func (o *Pool) GetBalanceCacaoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceCacao, true
}

// SetBalanceCacao sets field value
func (o *Pool) SetBalanceCacao(v string) {
	o.BalanceCacao = v
}

// GetBalanceAsset returns the BalanceAsset field value
func (o *Pool) GetBalanceAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceAsset
}

// GetBalanceAssetOk returns a tuple with the BalanceAsset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetBalanceAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceAsset, true
}

// SetBalanceAsset sets field value
func (o *Pool) SetBalanceAsset(v string) {
	o.BalanceAsset = v
}

// GetAsset returns the Asset field value
func (o *Pool) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *Pool) SetAsset(v string) {
	o.Asset = v
}

// GetLPUnits returns the LPUnits field value
func (o *Pool) GetLPUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LPUnits
}

// GetLPUnitsOk returns a tuple with the LPUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetLPUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LPUnits, true
}

// SetLPUnits sets field value
func (o *Pool) SetLPUnits(v string) {
	o.LPUnits = v
}

// GetPoolUnits returns the PoolUnits field value
func (o *Pool) GetPoolUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolUnits
}

// GetPoolUnitsOk returns a tuple with the PoolUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPoolUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolUnits, true
}

// SetPoolUnits sets field value
func (o *Pool) SetPoolUnits(v string) {
	o.PoolUnits = v
}

// GetStatus returns the Status field value
func (o *Pool) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Pool) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Pool) SetStatus(v string) {
	o.Status = v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *Pool) GetDecimals() int64 {
	if o == nil || o.Decimals == nil {
		var ret int64
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pool) GetDecimalsOk() (*int64, bool) {
	if o == nil || o.Decimals == nil {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *Pool) HasDecimals() bool {
	if o != nil && o.Decimals != nil {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int64 and assigns it to the Decimals field.
func (o *Pool) SetDecimals(v int64) {
	o.Decimals = &v
}

// GetSynthUnits returns the SynthUnits field value
func (o *Pool) GetSynthUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SynthUnits
}

// GetSynthUnitsOk returns a tuple with the SynthUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthUnits, true
}

// SetSynthUnits sets field value
func (o *Pool) SetSynthUnits(v string) {
	o.SynthUnits = v
}

// GetSynthSupply returns the SynthSupply field value
func (o *Pool) GetSynthSupply() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SynthSupply
}

// GetSynthSupplyOk returns a tuple with the SynthSupply field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthSupply, true
}

// SetSynthSupply sets field value
func (o *Pool) SetSynthSupply(v string) {
	o.SynthSupply = v
}

// GetPendingInboundCacao returns the PendingInboundCacao field value
func (o *Pool) GetPendingInboundCacao() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingInboundCacao
}

// GetPendingInboundCacaoOk returns a tuple with the PendingInboundCacao field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPendingInboundCacaoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingInboundCacao, true
}

// SetPendingInboundCacao sets field value
func (o *Pool) SetPendingInboundCacao(v string) {
	o.PendingInboundCacao = v
}

// GetPendingInboundAsset returns the PendingInboundAsset field value
func (o *Pool) GetPendingInboundAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingInboundAsset
}

// GetPendingInboundAssetOk returns a tuple with the PendingInboundAsset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPendingInboundAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingInboundAsset, true
}

// SetPendingInboundAsset sets field value
func (o *Pool) SetPendingInboundAsset(v string) {
	o.PendingInboundAsset = v
}

// GetSaversDepth returns the SaversDepth field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Pool) GetSaversDepth() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.SaversDepth
}

// GetSaversDepthOk returns a tuple with the SaversDepth field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pool) GetSaversDepthOk() (*interface{}, bool) {
	if o == nil || o.SaversDepth == nil {
		return nil, false
	}
	return &o.SaversDepth, true
}

// SetSaversDepth sets field value
func (o *Pool) SetSaversDepth(v interface{}) {
	o.SaversDepth = v
}

// GetSaversUnits returns the SaversUnits field value
func (o *Pool) GetSaversUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SaversUnits
}

// GetSaversUnitsOk returns a tuple with the SaversUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSaversUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaversUnits, true
}

// SetSaversUnits sets field value
func (o *Pool) SetSaversUnits(v string) {
	o.SaversUnits = v
}

// GetSynthMintPaused returns the SynthMintPaused field value
func (o *Pool) GetSynthMintPaused() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SynthMintPaused
}

// GetSynthMintPausedOk returns a tuple with the SynthMintPaused field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthMintPausedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthMintPaused, true
}

// SetSynthMintPaused sets field value
func (o *Pool) SetSynthMintPaused(v bool) {
	o.SynthMintPaused = v
}

func (o Pool) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["balance_cacao"] = o.BalanceCacao
	}
	if true {
		toSerialize["balance_asset"] = o.BalanceAsset
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["LP_units"] = o.LPUnits
	}
	if true {
		toSerialize["pool_units"] = o.PoolUnits
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Decimals != nil {
		toSerialize["decimals"] = o.Decimals
	}
	if true {
		toSerialize["synth_units"] = o.SynthUnits
	}
	if true {
		toSerialize["synth_supply"] = o.SynthSupply
	}
	if true {
		toSerialize["pending_inbound_cacao"] = o.PendingInboundCacao
	}
	if true {
		toSerialize["pending_inbound_asset"] = o.PendingInboundAsset
	}
	if o.SaversDepth != nil {
		toSerialize["savers_depth"] = o.SaversDepth
	}
	if true {
		toSerialize["savers_units"] = o.SaversUnits
	}
	if true {
		toSerialize["synth_mint_paused"] = o.SynthMintPaused
	}
	return json.Marshal(toSerialize)
}

type NullablePool struct {
	value *Pool
	isSet bool
}

func (v NullablePool) Get() *Pool {
	return v.value
}

func (v *NullablePool) Set(val *Pool) {
	v.value = val
	v.isSet = true
}

func (v NullablePool) IsSet() bool {
	return v.isSet
}

func (v *NullablePool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePool(val *Pool) *NullablePool {
	return &NullablePool{value: val, isSet: true}
}

func (v NullablePool) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


